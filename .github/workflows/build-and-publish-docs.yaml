name: Build and Publish Documentation

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      run_scan:
        description: 'Run jQAssistant scan'
        type: boolean
        required: false
        default: false
      run_analyze:
        description: 'Run jQAssistant analyze'
        type: boolean
        required: false
        default: true
      publish_docs:
        description: 'Publish documents to GitHub Pages'
        type: boolean
        required: false
        default: false

permissions:
  contents: read
  id-token: write
  pages: write

jobs:
  check-artifact:
    runs-on: ubuntu-latest
    outputs:
      should_scan: ${{ steps.check_artifact.outputs.should_scan }}
    env:
      REPO_NAME: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Check Artifact
        id: check_artifact
        run: |
          if .github/check-artifact jqassistant-store; then
            echo should_scan=false >> $GITHUB_OUTPUT
          else
            echo should_scan=true >> $GITHUB_OUTPUT
          fi

  jqa-scan:
    needs: check-artifact
    if: ${{ inputs.run_scan || needs.check-artifact.outputs.should_scan == 'true' }}
    outputs:
      should_analyze: ${{ steps.jqa_scan.outputs.should_analyze }}
    runs-on: ubuntu-latest
    env:
      GITHUB_LOGIN: ${{ github.repository_owner }}
      GITHUB_OAUTH: ${{ github.token }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Run jQAssistant scan
        id: jqa_scan
        run: |
          if mvn jqassistant:scan -fae -e -ntp -s .github/settings.xml; then
            echo should_analyze=true >> $GITHUB_OUTPUT
          else
            echo should_analyze=false >> $GITHUB_OUTPUT
          fi

      - name: Upload jqassistant/store artifact
        uses: actions/upload-artifact@v4
        with:
          name: jqassistant-store
          path: target/jqassistant/store

  jqa-analyze:
    needs: jqa-scan
    if: ${{ inputs.run_analyze || needs.jqa-scan.outputs.should_analyze == 'true' }}
    outputs:
      should_publish: ${{ steps.jqa_analyze.outputs.should_publish }}
    runs-on: ubuntu-latest
    env:
      GITHUB_LOGIN: ${{ github.repository_owner }}
      GITHUB_OAUTH: ${{ github.token }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download jqassistant/store artifact
        uses: actions/download-artifact@v4
        with:
          name: jqassistant-store
          path: target/jqassistant/store

      - name: Run jQAssistant analyze and generate docs
        id: jqa_analyze
        run: |
          if mvn jqassistant:analyze asciidoctor:process-asciidoc -fae -e -ntp -s .github/settings.xml; then
            echo should_publish=true >> $GITHUB_OUTPUT
          else
            echo should_publish=false >> $GITHUB_OUTPUT
          fi

      - name: Upload Generated Documentation
        uses: actions/upload-artifact@v4
        with:
          name: generated-docs
          path: target/generated-docs

  publish-docs:
    needs: jqa-analyze
    if: ${{  needs.jqa-analyze.outputs.should_publish == 'true' && (inputs.publish_docs || github.ref_name == 'main') }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download generated-docs artifact
        uses: actions/download-artifact@v4
        with:
          name: generated-docs
          path: target/generated-docs
          
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/generated-docs
      
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4